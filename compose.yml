version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8090:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  eureka-server:
    image: eureka-server:latest
    restart: on-failure
    container_name: eureka-server
    ports:
      - 8761:8761

  config-server:
    image: config-server:latest
    restart: always
    container_name: config-server
    ports:
      - 8888:8888
    depends_on:
      - eureka-server
    environment:
      eureka.client.service-url.defaultZone: http://host.docker.internal:8761/eureka/

  db-user:
    image: postgres:latest
    container_name: db-user
    environment:
      POSTGRES_PASSWORD: 500290
      POSTGRES_USER: users

  mongodb-auth:
    image: mongo:latest
    container_name: mongodb-auth
    ports:
      - 27017:27017

  db-auth:
    image: postgres:latest
    container_name: db-auth
    environment:
      POSTGRES_PASSWORD: 500290
      POSTGRES_USER: auth

  db-shop:
    image: postgres:latest
    container_name: db-shop
    environment:
      POSTGRES_PASSWORD: 500290
      POSTGRES_USER: shops

  user-service:
    image: user-service:latest
    container_name: user-service
    restart: always
    ports:
      - 8082:8082
    depends_on:
      - config-server
      - db-user
    environment:
      eureka.client.service-url.defaultZone: http://host.docker.internal:8761/eureka/

  auth-service:
    image: auth-service:latest
    container_name: auth-service
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - config-server
      - db-auth
      - mongodb-auth
      - kafka
    environment:
      eureka.client.service-url.defaultZone: http://host.docker.internal:8761/eureka/

  notification-service:
    image: notification-service:latest
    container_name: notification-service
    restart: always
    ports:
      - 8086:8086
    depends_on:
      - config-server
      - kafka
    environment:
      eureka.client.service-url.defaultZone: http://host.docker.internal:8761/eureka/